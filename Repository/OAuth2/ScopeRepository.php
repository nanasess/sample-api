<?php

namespace Plugin\SampleApi\Repository\OAuth2;

use Doctrine\ORM\EntityRepository;
use OAuth2\Storage\ScopeInterface;
use OAuth2\RequestInterface;

/**
 * ScopeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ScopeRepository extends EntityRepository implements ScopeInterface
{
    /**
     * {@inheritdoc}
     */
    public function scopeExists($scope)
    {
        $scopes = explode(' ', $scope);
        $qb = $this->createQueryBuilder('s');
        $qb->select('COUNT(s.id)')
            ->where($qb->expr()->in('s.scope', $scopes));
        $count = $qb->getQuery()->getSingleScalarResult();
        return $count == count($scopes);
    }

    /**
     * {@inheritdoc}
     */
    public function getDefaultScope($client_id = null)
    {
        $Scopes = $this->findBy(array('is_default' => true));
        if ($Scopes) {
            $defaultScopes = array_map(
                function ($Scope) {
                    return $Scope->getScope();
                }, $Scopes
            );
            return implode(' ', $defaultScopes);
        }
        return null;
    }
}
